/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 Idle.gltf --transform 
Files: Idle.gltf [90.53KB] > /Users/ale/Clients/react-futbol/src/gltf_exports/Idle-transformed.glb [340.66KB] (-276%)
*/

import React, {useEffect, useRef } from 'react'
import { useGraph, useFrame } from '@react-three/fiber'
import { useGLTF, useAnimations, Text } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'
import { useSpring, a } from '@react-spring/three'


export function SoccerPlayerIdle({position, number, ...props}) {
  const group = useRef()
  const { scene, animations } = useGLTF('/Idle-transformed.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions , names} = useAnimations(animations, group)


  // ðŸŒ€ Animate position with spring
  const { pos } = useSpring({
    pos: position, // New target position
    config: { mass: 1, tension: 120, friction: 20 }, // Adjust for smoother/slower motion
  })

  useEffect( () => {
    actions[names[0]].reset().fadeIn(0.3).play()
  }, [actions, names])

  return (
    <a.group ref={group} position={pos} {...props} dispose={null} rotation={[0, Math.PI, 0]} >
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
        </group>
        <skinnedMesh name="Man" geometry={nodes.Man.geometry} material={materials.Man_mtl} skeleton={nodes.Man.skeleton} rotation={[Math.PI / 2, 0, 0]} scale={0.01} />
        {/* Player Number */}
        {number && (
          <Text
            position={[0, 3, 0]} // Position text slightly above the sphere
            rotation={[0,- Math.PI, 0]}
            fontSize={0.2}
            color="white"
            anchorX="center"
            anchorY="middle"
          >
            {number}
          </Text>
        )}
      </group>
    </a.group>
  )
}

useGLTF.preload('/Idle-transformed.glb')
